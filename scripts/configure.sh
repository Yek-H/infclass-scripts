#!/bin/sh

SCRIPT="$(readlink -f $0)"
SCRIPTS_PATH="$(dirname $SCRIPT)"
ROOT_DIR="$(dirname $SCRIPTS_PATH)"
CONF_PATH="$ROOT_DIR/conf"

. "$SCRIPTS_PATH/utils.sh"
. "$CONF_PATH/global.conf"

if [ -f "$CONF_PATH/local.conf" ]; then
	. "$CONF_PATH/local.conf"
fi

CONF_EXISTED=false
CONF_IS_DEFAULT=false

if [ x"$1" != "x" ]; then
	CONF="$1"
	echo "Configuration: '$CONF'"
elif [ x"$CONF" != "x" ]; then
	echo "Configuration: '$CONF'"
else
	CONF="$DEFAULT_CONF"
fi

if [ x"$CONF" = "xlocal" ] || [ x"$CONF" = "xglobal" ] || [ x"$CONF" = "xconf" ] || [ x"$CONF" = "xscripts" ]; then
	echo "Invalid configuration name: Name \"$CONF\" is reserved."
	exit 1
fi

if [ x"$CONF" = "x$DEFAULT_CONF" ]; then
	CONF_IS_DEFAULT=true
fi

TARGET_CONF="$CONF_PATH/$CONF.conf"
EXTRA_GAME_CFG="$ROOT_DIR/game-conf/$CONF.cfg"

if [ -f "$TARGET_CONF" ]; then
	CONF_EXISTED=true
	. "$TARGET_CONF"
fi

ask_configuration()
{
	read_not_null SERVER_NAME "The server display name"
	read_not_null SERVER_PORT "The server listing port"
	read_yes_no SERVER_REGISTER "Register the server" no

	read_not_null RCON_PASSWORD "RCON password"
	if [ x"$RCON_PASSWORD" = "x" ]; then
		echo "Warning: RCON is disabled due to the empty password"
	fi

	read_yes_no ENABLE_ECON "Enable ECON" no
	if [ "$ENABLE_ECON" = "yes" ]; then
		read_not_null EC_BINDADDR "ECON bind address"
		read_not_null EC_PORT "ECON port"
		read_not_null EC_PASSWORD "ECON password"
		read_not_null EC_OUTPUT_LEVEL "ECON output level"

		if [ x"$EC_PASSWORD" = "x" ]; then
			echo "Warning: ECON is disabled due to the empty password"
		fi
	fi

	read_yes_no CONFIGURE_REPO "Configure advanced options" no
	if [ "$CONFIGURE_REPO" = "yes" ]; then
		read_yes_no VERBOSE_BUILD "Verbose build" no
		read_not_null REPOSITORY_URL "Repository URL"
		read_not_null REPOSITORY_BRANCH "Repository branch"
	fi
}

save_configuration()
{
	echo "# This conf file generated by $SCRIPT" > "$TARGET_CONF"
	echo "SERVER_NAME=\"$SERVER_NAME\"" >> "$TARGET_CONF"
	echo "SERVER_PORT=\"$SERVER_PORT\"" >> "$TARGET_CONF"
	echo "SERVER_REGISTER=\"$SERVER_REGISTER\"" >> "$TARGET_CONF"

	echo "RCON_PASSWORD=\"$RCON_PASSWORD\"" >> "$TARGET_CONF"

	echo "ENABLE_ECON=\"$ENABLE_ECON\"" >> "$TARGET_CONF"
	echo "EC_BINDADDR=$EC_BINDADDR" >> "$TARGET_CONF"
	echo "EC_PORT=$EC_PORT" >> "$TARGET_CONF"
	echo "EC_PASSWORD=\"$EC_PASSWORD\"" >> "$TARGET_CONF"
	echo "EC_OUTPUT_LEVEL=$EC_OUTPUT_LEVEL" >> "$TARGET_CONF"

	echo "CONFIGURE_REPO=\"$CONFIGURE_REPO\"" >> "$TARGET_CONF"
	echo "VERBOSE_BUILD=\"$VERBOSE_BUILD\"" >> "$TARGET_CONF"
	echo "REPOSITORY_URL=\"$REPOSITORY_URL\"" >> "$TARGET_CONF"
	echo "REPOSITORY_BRANCH=\"$REPOSITORY_BRANCH\"" >> "$TARGET_CONF"
	
	if [ ! -f "$EXTRA_GAME_CFG" ]; then
		mkdir -p "$ROOT_DIR/game-conf"
		echo "# Add extra game configuration options here. This file won't be overwritten on update." > "$EXTRA_GAME_CFG"
	fi
}

if [ "$CONF_EXISTED" = true ]; then
	if [ "$CONF_IS_DEFAULT" = true ]; then
		echo "Updating the default configuration '$CONF'"
	else
		echo "Updating configuration '$CONF'"
	fi
else
	if [ "$CONF_IS_DEFAULT" = true ]; then
		echo "Creating the default configuration '$CONF'"
	else
		echo "Creating configuration '$CONF'"
	fi
fi

ask_configuration
save_configuration
